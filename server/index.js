// Handle sourceMaps in node
'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

require('source-map-support/register');

// Import Soundworks library modules (server side)
// import soundworks from 'soundworks/server';

var _soundworksServerCoreServer = require('soundworks/server/core/server');

var _soundworksServerCoreServer2 = _interopRequireDefault(_soundworksServerCoreServer);

var _soundworksServerServicesServerCheckin = require('soundworks/server/services/ServerCheckin');

var _soundworksServerServicesServerCheckin2 = _interopRequireDefault(_soundworksServerServicesServerCheckin);

// Import server side performance module

var _PlayerExperience = require('./PlayerExperience');

var _PlayerExperience2 = _interopRequireDefault(_PlayerExperience);

// Launch server
_soundworksServerCoreServer2['default'].start({ appName: 'Template' });

// Instantiate the modules
var checkin = new _soundworksServerServicesServerCheckin2['default']({ capacity: 100 });
var experience = new _PlayerExperience2['default']();

// Map modules to client types:
// - the `'player'` clients (who take part in the scenario by connecting to the
//   server through the root URL) need to communicate with the `checkin` and the
//   `performance` on the server side;
// - we could also map other modules to additional client types (who would take
//   part in the scenario by connecting to the server through the '/clientType'
//   URL).
_soundworksServerCoreServer2['default'].map('player', checkin, experience);
// server.map('soloist', soloistPerformance);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zZXJ2ZXIvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFDTyw2QkFBNkI7Ozs7OzBDQUdqQiwrQkFBK0I7Ozs7cURBQ3hCLDBDQUEwQzs7Ozs7O2dDQUd2QyxvQkFBb0I7Ozs7O0FBR2pELHdDQUFPLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDOzs7QUFHdEMsSUFBTSxPQUFPLEdBQUcsdURBQWtCLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7QUFDckQsSUFBTSxVQUFVLEdBQUcsbUNBQXNCLENBQUM7Ozs7Ozs7OztBQVMxQyx3Q0FBTyxHQUFHLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQyIsImZpbGUiOiJzcmMvc2VydmVyL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSGFuZGxlIHNvdXJjZU1hcHMgaW4gbm9kZVxuaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInO1xuLy8gSW1wb3J0IFNvdW5kd29ya3MgbGlicmFyeSBtb2R1bGVzIChzZXJ2ZXIgc2lkZSlcbi8vIGltcG9ydCBzb3VuZHdvcmtzIGZyb20gJ3NvdW5kd29ya3Mvc2VydmVyJztcbmltcG9ydCBzZXJ2ZXIgZnJvbSAnc291bmR3b3Jrcy9zZXJ2ZXIvY29yZS9zZXJ2ZXInO1xuaW1wb3J0IFNlcnZlckNoZWNraW4gZnJvbSAnc291bmR3b3Jrcy9zZXJ2ZXIvc2VydmljZXMvU2VydmVyQ2hlY2tpbic7XG5cbi8vIEltcG9ydCBzZXJ2ZXIgc2lkZSBwZXJmb3JtYW5jZSBtb2R1bGVcbmltcG9ydCBQbGF5ZXJFeHBlcmllbmNlIGZyb20gJy4vUGxheWVyRXhwZXJpZW5jZSc7XG5cbi8vIExhdW5jaCBzZXJ2ZXJcbnNlcnZlci5zdGFydCh7IGFwcE5hbWU6ICdUZW1wbGF0ZScgfSk7XG5cbi8vIEluc3RhbnRpYXRlIHRoZSBtb2R1bGVzXG5jb25zdCBjaGVja2luID0gbmV3IFNlcnZlckNoZWNraW4oeyBjYXBhY2l0eTogMTAwIH0pO1xuY29uc3QgZXhwZXJpZW5jZSA9IG5ldyBQbGF5ZXJFeHBlcmllbmNlKCk7XG5cbi8vIE1hcCBtb2R1bGVzIHRvIGNsaWVudCB0eXBlczpcbi8vIC0gdGhlIGAncGxheWVyJ2AgY2xpZW50cyAod2hvIHRha2UgcGFydCBpbiB0aGUgc2NlbmFyaW8gYnkgY29ubmVjdGluZyB0byB0aGVcbi8vICAgc2VydmVyIHRocm91Z2ggdGhlIHJvb3QgVVJMKSBuZWVkIHRvIGNvbW11bmljYXRlIHdpdGggdGhlIGBjaGVja2luYCBhbmQgdGhlXG4vLyAgIGBwZXJmb3JtYW5jZWAgb24gdGhlIHNlcnZlciBzaWRlO1xuLy8gLSB3ZSBjb3VsZCBhbHNvIG1hcCBvdGhlciBtb2R1bGVzIHRvIGFkZGl0aW9uYWwgY2xpZW50IHR5cGVzICh3aG8gd291bGQgdGFrZVxuLy8gICBwYXJ0IGluIHRoZSBzY2VuYXJpbyBieSBjb25uZWN0aW5nIHRvIHRoZSBzZXJ2ZXIgdGhyb3VnaCB0aGUgJy9jbGllbnRUeXBlJ1xuLy8gICBVUkwpLlxuc2VydmVyLm1hcCgncGxheWVyJywgY2hlY2tpbiwgZXhwZXJpZW5jZSk7XG4vLyBzZXJ2ZXIubWFwKCdzb2xvaXN0Jywgc29sb2lzdFBlcmZvcm1hbmNlKTtcbiJdfQ==