// Import Soundworks library modules (server side)
'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _soundworksServer = require('soundworks/server');

// Import template modules (server side)

var _PlayerPerformanceJs = require('./PlayerPerformance.js');

var _PlayerPerformanceJs2 = _interopRequireDefault(_PlayerPerformanceJs);

// Instantiate the modules
var checkin = new _soundworksServer.ServerCheckin({ maxClients: 100 });
var performance = new _PlayerPerformanceJs2['default']();

// Launch server
_soundworksServer.server.start();

// Map modules to client types:
// - the `'player'` clients (who take part in the scenario by connecting to the
//   server through the root URL) need to communicate with the `checkin` and the
//   `performance` on the server side;
// - we could also map other modules to additional client types (who would take
//   part in the scenario by connecting to the server through the '/clientType'
//   URL).
_soundworksServer.server.map('player', checkin, performance);
// server.map('soloist', soloistPerformance);
// server.map('conductor', control, conductorPerformance);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zZXJ2ZXIvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Z0NBQ3NDLG1CQUFtQjs7OzttQ0FFM0Isd0JBQXdCOzs7OztBQUd0RCxJQUFNLE9BQU8sR0FBRyxvQ0FBa0IsRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztBQUN2RCxJQUFNLFdBQVcsR0FBRyxzQ0FBdUIsQ0FBQzs7O0FBRzVDLHlCQUFPLEtBQUssRUFBRSxDQUFDOzs7Ozs7Ozs7QUFTZix5QkFBTyxHQUFHLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQyIsImZpbGUiOiJzcmMvc2VydmVyL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0IFNvdW5kd29ya3MgbGlicmFyeSBtb2R1bGVzIChzZXJ2ZXIgc2lkZSlcbmltcG9ydCB7IHNlcnZlciwgU2VydmVyQ2hlY2tpbiB9IGZyb20gJ3NvdW5kd29ya3Mvc2VydmVyJztcbi8vIEltcG9ydCB0ZW1wbGF0ZSBtb2R1bGVzIChzZXJ2ZXIgc2lkZSlcbmltcG9ydCBQbGF5ZXJQZXJmb3JtYW5jZSBmcm9tICcuL1BsYXllclBlcmZvcm1hbmNlLmpzJztcblxuLy8gSW5zdGFudGlhdGUgdGhlIG1vZHVsZXNcbmNvbnN0IGNoZWNraW4gPSBuZXcgU2VydmVyQ2hlY2tpbih7IG1heENsaWVudHM6IDEwMCB9KTtcbmNvbnN0IHBlcmZvcm1hbmNlID0gbmV3IFBsYXllclBlcmZvcm1hbmNlKCk7XG5cbi8vIExhdW5jaCBzZXJ2ZXJcbnNlcnZlci5zdGFydCgpO1xuXG4vLyBNYXAgbW9kdWxlcyB0byBjbGllbnQgdHlwZXM6XG4vLyAtIHRoZSBgJ3BsYXllcidgIGNsaWVudHMgKHdobyB0YWtlIHBhcnQgaW4gdGhlIHNjZW5hcmlvIGJ5IGNvbm5lY3RpbmcgdG8gdGhlXG4vLyAgIHNlcnZlciB0aHJvdWdoIHRoZSByb290IFVSTCkgbmVlZCB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBgY2hlY2tpbmAgYW5kIHRoZVxuLy8gICBgcGVyZm9ybWFuY2VgIG9uIHRoZSBzZXJ2ZXIgc2lkZTtcbi8vIC0gd2UgY291bGQgYWxzbyBtYXAgb3RoZXIgbW9kdWxlcyB0byBhZGRpdGlvbmFsIGNsaWVudCB0eXBlcyAod2hvIHdvdWxkIHRha2Vcbi8vICAgcGFydCBpbiB0aGUgc2NlbmFyaW8gYnkgY29ubmVjdGluZyB0byB0aGUgc2VydmVyIHRocm91Z2ggdGhlICcvY2xpZW50VHlwZSdcbi8vICAgVVJMKS5cbnNlcnZlci5tYXAoJ3BsYXllcicsIGNoZWNraW4sIHBlcmZvcm1hbmNlKTtcbi8vIHNlcnZlci5tYXAoJ3NvbG9pc3QnLCBzb2xvaXN0UGVyZm9ybWFuY2UpO1xuLy8gc2VydmVyLm1hcCgnY29uZHVjdG9yJywgY29udHJvbCwgY29uZHVjdG9yUGVyZm9ybWFuY2UpO1xuIl19