// Enable sourceMaps in node
'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

require('source-map-support/register');

// Import Soundworks library modules (server side) and server side experience

var _soundworksServer = require('soundworks/server');

var _soundworksServer2 = _interopRequireDefault(_soundworksServer);

var _PlayerExperience = require('./PlayerExperience');

var _PlayerExperience2 = _interopRequireDefault(_PlayerExperience);

_soundworksServer2['default'].server.init({
  appName: 'Template',
  setup: { area: { width: 10, height: 10 } }
});

// Configure the services and create the experience.
//
// Activities must be mapped to client types:
// - the `'player'` clients (who take part in the scenario by connecting to the
//   server through the root URL) need to communicate with the `checkin` and the
//   `performance` on the server side;
// - we could also map activities to additional client types (thus defining a
//   route (url) of the from: `'/' + clientType`
var checkin = _soundworksServer2['default'].server.require('checkin', {
  capacity: 100,
  clientType: 'player'
});

var sharedConfig = _soundworksServer2['default'].server.require('shared-config');
sharedConfig.addItem('setup.area', 'player');

var experience = new _PlayerExperience2['default']();
experience.addClientType('player');

// alternative to define client types for each activities:
// checkin.addClientType('player');

// Start the application with a given name.
_soundworksServer2['default'].server.start();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zZXJ2ZXIvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFDTyw2QkFBNkI7Ozs7Z0NBRWIsbUJBQW1COzs7O2dDQUNiLG9CQUFvQjs7OztBQUdqRCw4QkFBVyxNQUFNLENBQUMsSUFBSSxDQUFDO0FBQ3JCLFNBQU8sRUFBRSxVQUFVO0FBQ25CLE9BQUssRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFO0NBQzNDLENBQUMsQ0FBQzs7Ozs7Ozs7OztBQVVILElBQU0sT0FBTyxHQUFHLDhCQUFXLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFO0FBQ25ELFVBQVEsRUFBRSxHQUFHO0FBQ2IsWUFBVSxFQUFFLFFBQVE7Q0FDckIsQ0FBQyxDQUFDOztBQUVILElBQU0sWUFBWSxHQUFHLDhCQUFXLE1BQU0sQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDaEUsWUFBWSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLENBQUM7O0FBRTdDLElBQU0sVUFBVSxHQUFHLG1DQUFzQixDQUFDO0FBQzFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7Ozs7OztBQU1uQyw4QkFBVyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMiLCJmaWxlIjoic3JjL3NlcnZlci9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEVuYWJsZSBzb3VyY2VNYXBzIGluIG5vZGVcbmltcG9ydCAnc291cmNlLW1hcC1zdXBwb3J0L3JlZ2lzdGVyJztcbi8vIEltcG9ydCBTb3VuZHdvcmtzIGxpYnJhcnkgbW9kdWxlcyAoc2VydmVyIHNpZGUpIGFuZCBzZXJ2ZXIgc2lkZSBleHBlcmllbmNlXG5pbXBvcnQgc291bmR3b3JrcyBmcm9tICdzb3VuZHdvcmtzL3NlcnZlcic7XG5pbXBvcnQgUGxheWVyRXhwZXJpZW5jZSBmcm9tICcuL1BsYXllckV4cGVyaWVuY2UnO1xuXG5cbnNvdW5kd29ya3Muc2VydmVyLmluaXQoe1xuICBhcHBOYW1lOiAnVGVtcGxhdGUnLFxuICBzZXR1cDogeyBhcmVhOiB7IHdpZHRoOiAxMCwgaGVpZ2h0OiAxMCB9IH1cbn0pO1xuXG4vLyBDb25maWd1cmUgdGhlIHNlcnZpY2VzIGFuZCBjcmVhdGUgdGhlIGV4cGVyaWVuY2UuXG4vL1xuLy8gQWN0aXZpdGllcyBtdXN0IGJlIG1hcHBlZCB0byBjbGllbnQgdHlwZXM6XG4vLyAtIHRoZSBgJ3BsYXllcidgIGNsaWVudHMgKHdobyB0YWtlIHBhcnQgaW4gdGhlIHNjZW5hcmlvIGJ5IGNvbm5lY3RpbmcgdG8gdGhlXG4vLyAgIHNlcnZlciB0aHJvdWdoIHRoZSByb290IFVSTCkgbmVlZCB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBgY2hlY2tpbmAgYW5kIHRoZVxuLy8gICBgcGVyZm9ybWFuY2VgIG9uIHRoZSBzZXJ2ZXIgc2lkZTtcbi8vIC0gd2UgY291bGQgYWxzbyBtYXAgYWN0aXZpdGllcyB0byBhZGRpdGlvbmFsIGNsaWVudCB0eXBlcyAodGh1cyBkZWZpbmluZyBhXG4vLyAgIHJvdXRlICh1cmwpIG9mIHRoZSBmcm9tOiBgJy8nICsgY2xpZW50VHlwZWBcbmNvbnN0IGNoZWNraW4gPSBzb3VuZHdvcmtzLnNlcnZlci5yZXF1aXJlKCdjaGVja2luJywge1xuICBjYXBhY2l0eTogMTAwLFxuICBjbGllbnRUeXBlOiAncGxheWVyJ1xufSk7XG5cbmNvbnN0IHNoYXJlZENvbmZpZyA9IHNvdW5kd29ya3Muc2VydmVyLnJlcXVpcmUoJ3NoYXJlZC1jb25maWcnKTtcbnNoYXJlZENvbmZpZy5hZGRJdGVtKCdzZXR1cC5hcmVhJywgJ3BsYXllcicpO1xuXG5jb25zdCBleHBlcmllbmNlID0gbmV3IFBsYXllckV4cGVyaWVuY2UoKTtcbmV4cGVyaWVuY2UuYWRkQ2xpZW50VHlwZSgncGxheWVyJyk7XG5cbi8vIGFsdGVybmF0aXZlIHRvIGRlZmluZSBjbGllbnQgdHlwZXMgZm9yIGVhY2ggYWN0aXZpdGllczpcbi8vIGNoZWNraW4uYWRkQ2xpZW50VHlwZSgncGxheWVyJyk7XG5cbi8vIFN0YXJ0IHRoZSBhcHBsaWNhdGlvbiB3aXRoIGEgZ2l2ZW4gbmFtZS5cbnNvdW5kd29ya3Muc2VydmVyLnN0YXJ0KCk7XG4iXX0=