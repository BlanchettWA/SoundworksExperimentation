// Import Soundworks library modules (client side)
'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _soundworksClient = require('soundworks/client');

// Import Soundfield modules (client side)

var _PlayerPerformanceJs = require('./PlayerPerformance.js');

var _PlayerPerformanceJs2 = _interopRequireDefault(_PlayerPerformanceJs);

// Files to load
var audioFiles = ['sounds/sound-welcome.mp3', 'sounds/sound-others.mp3'];

var init = function init() {
  // Initialize the client
  _soundworksClient.client.init('player');

  // Instantiate the modules
  var welcome = new _soundworksClient.Welcome({ fullScreen: false });
  var checkin = new _soundworksClient.ClientCheckin({ showDialog: false });
  var loader = new _soundworksClient.Loader({ files: audioFiles });
  var performance = new _PlayerPerformanceJs2['default'](loader);

  // Start the scenario and order the modules
  _soundworksClient.client.start(function (serial, parallel) {
    return serial(
    // Initialization step: we launch in parallel the welcome module,
    // the loading of the files, and the checkin
    parallel(welcome, loader, checkin),
    // When the initialization step is done, we launch the performance
    performance);
  });
};

// Init app when document id ready
window.addEventListener('load', init);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jbGllbnQvcGxheWVyL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O2dDQUN1RCxtQkFBbUI7Ozs7bUNBRTVDLHdCQUF3Qjs7Ozs7QUFHdEQsSUFBTSxVQUFVLEdBQUcsQ0FBQywwQkFBMEIsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDOztBQUUzRSxJQUFNLElBQUksR0FBRyxTQUFQLElBQUksR0FBUzs7QUFFakIsMkJBQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDOzs7QUFHdEIsTUFBTSxPQUFPLEdBQUcsOEJBQVksRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUNuRCxNQUFNLE9BQU8sR0FBRyxvQ0FBa0IsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUN6RCxNQUFNLE1BQU0sR0FBRyw2QkFBVyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0FBQ2pELE1BQU0sV0FBVyxHQUFHLHFDQUFzQixNQUFNLENBQUMsQ0FBQzs7O0FBR2xELDJCQUFPLEtBQUssQ0FBQyxVQUFDLE1BQU0sRUFBRSxRQUFRO1dBQzVCLE1BQU07OztBQUdKLFlBQVEsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQzs7QUFFbEMsZUFBVyxDQUNaO0dBQUEsQ0FDRixDQUFDO0NBQ0gsQ0FBQTs7O0FBR0QsTUFBTSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyIsImZpbGUiOiJzcmMvY2xpZW50L3BsYXllci9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydCBTb3VuZHdvcmtzIGxpYnJhcnkgbW9kdWxlcyAoY2xpZW50IHNpZGUpXG5pbXBvcnQgeyBjbGllbnQsIENsaWVudENoZWNraW4sIFdlbGNvbWUsIExvYWRlciB9IGZyb20gJ3NvdW5kd29ya3MvY2xpZW50Jztcbi8vIEltcG9ydCBTb3VuZGZpZWxkIG1vZHVsZXMgKGNsaWVudCBzaWRlKVxuaW1wb3J0IFBsYXllclBlcmZvcm1hbmNlIGZyb20gJy4vUGxheWVyUGVyZm9ybWFuY2UuanMnO1xuXG4vLyBGaWxlcyB0byBsb2FkXG5jb25zdCBhdWRpb0ZpbGVzID0gWydzb3VuZHMvc291bmQtd2VsY29tZS5tcDMnLCAnc291bmRzL3NvdW5kLW90aGVycy5tcDMnXTtcblxuY29uc3QgaW5pdCA9ICgpID0+IHtcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgY2xpZW50XG4gIGNsaWVudC5pbml0KCdwbGF5ZXInKTtcblxuICAvLyBJbnN0YW50aWF0ZSB0aGUgbW9kdWxlc1xuICBjb25zdCB3ZWxjb21lID0gbmV3IFdlbGNvbWUoeyBmdWxsU2NyZWVuOiBmYWxzZSB9KTtcbiAgY29uc3QgY2hlY2tpbiA9IG5ldyBDbGllbnRDaGVja2luKHsgc2hvd0RpYWxvZzogZmFsc2UgfSk7XG4gIGNvbnN0IGxvYWRlciA9IG5ldyBMb2FkZXIoeyBmaWxlczogYXVkaW9GaWxlcyB9KTtcbiAgY29uc3QgcGVyZm9ybWFuY2UgPSBuZXcgUGxheWVyUGVyZm9ybWFuY2UobG9hZGVyKTtcblxuICAvLyBTdGFydCB0aGUgc2NlbmFyaW8gYW5kIG9yZGVyIHRoZSBtb2R1bGVzXG4gIGNsaWVudC5zdGFydCgoc2VyaWFsLCBwYXJhbGxlbCkgPT5cbiAgICBzZXJpYWwoXG4gICAgICAvLyBJbml0aWFsaXphdGlvbiBzdGVwOiB3ZSBsYXVuY2ggaW4gcGFyYWxsZWwgdGhlIHdlbGNvbWUgbW9kdWxlLFxuICAgICAgLy8gdGhlIGxvYWRpbmcgb2YgdGhlIGZpbGVzLCBhbmQgdGhlIGNoZWNraW5cbiAgICAgIHBhcmFsbGVsKHdlbGNvbWUsIGxvYWRlciwgY2hlY2tpbiksXG4gICAgICAvLyBXaGVuIHRoZSBpbml0aWFsaXphdGlvbiBzdGVwIGlzIGRvbmUsIHdlIGxhdW5jaCB0aGUgcGVyZm9ybWFuY2VcbiAgICAgIHBlcmZvcm1hbmNlXG4gICAgKVxuICApO1xufVxuXG4vLyBJbml0IGFwcCB3aGVuIGRvY3VtZW50IGlkIHJlYWR5XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGluaXQpO1xuIl19