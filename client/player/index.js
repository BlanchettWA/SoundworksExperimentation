// Import Soundworks library modules (client side)
// import { client, ClientCheckin, Welcome, Loader, ClientControl } from 'soundworks/client';
// Import Soundfield modules (client side)
'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _PlayerExperienceJs = require('./PlayerExperience.js');

var _PlayerExperienceJs2 = _interopRequireDefault(_PlayerExperienceJs);

var _soundworksClient = require('soundworks/client');

var _soundworksClient2 = _interopRequireDefault(_soundworksClient);

// Files to load
var audioFiles = ['sounds/sound-welcome.mp3', 'sounds/sound-others.mp3'];

var init = function init() {
  // shared by server (cf .ejs template) - @todo move to template
  var socketIO = window.CONFIG && window.CONFIG.SOCKET_CONFIG;
  var appName = window.CONFIG && window.CONFIG.APP_NAME;

  // configure client / app
  _soundworksClient2['default'].client.init('player', { socketIO: socketIO, appName: appName });
  var performance = new _PlayerExperienceJs2['default'](audioFiles);

  // @warning: no views should be created before this call
  // implies to remove init and make it a `start` sub-routine
  _soundworksClient2['default'].client.start();
};

// Init app when document id ready
window.addEventListener('load', init);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jbGllbnQvcGxheWVyL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7a0NBRzZCLHVCQUF1Qjs7OztnQ0FDN0IsbUJBQW1COzs7OztBQUcxQyxJQUFNLFVBQVUsR0FBRyxDQUFDLDBCQUEwQixFQUFFLHlCQUF5QixDQUFDLENBQUM7O0FBRTNFLElBQU0sSUFBSSxHQUFHLFNBQVAsSUFBSSxHQUFTOztBQUVqQixNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDO0FBQzlELE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7OztBQUd4RCxnQ0FBVyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLFFBQVEsRUFBUixRQUFRLEVBQUUsT0FBTyxFQUFQLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFDeEQsTUFBTSxXQUFXLEdBQUcsb0NBQXFCLFVBQVUsQ0FBQyxDQUFDOzs7O0FBSXJELGdDQUFXLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztDQUUzQixDQUFBOzs7QUFHRCxNQUFNLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDIiwiZmlsZSI6InNyYy9jbGllbnQvcGxheWVyL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0IFNvdW5kd29ya3MgbGlicmFyeSBtb2R1bGVzIChjbGllbnQgc2lkZSlcbi8vIGltcG9ydCB7IGNsaWVudCwgQ2xpZW50Q2hlY2tpbiwgV2VsY29tZSwgTG9hZGVyLCBDbGllbnRDb250cm9sIH0gZnJvbSAnc291bmR3b3Jrcy9jbGllbnQnO1xuLy8gSW1wb3J0IFNvdW5kZmllbGQgbW9kdWxlcyAoY2xpZW50IHNpZGUpXG5pbXBvcnQgUGxheWVyRXhwZXJpZW5jZSBmcm9tICcuL1BsYXllckV4cGVyaWVuY2UuanMnO1xuaW1wb3J0IHNvdW5kd29ya3MgZnJvbSAnc291bmR3b3Jrcy9jbGllbnQnO1xuXG4vLyBGaWxlcyB0byBsb2FkXG5jb25zdCBhdWRpb0ZpbGVzID0gWydzb3VuZHMvc291bmQtd2VsY29tZS5tcDMnLCAnc291bmRzL3NvdW5kLW90aGVycy5tcDMnXTtcblxuY29uc3QgaW5pdCA9ICgpID0+IHtcbiAgLy8gc2hhcmVkIGJ5IHNlcnZlciAoY2YgLmVqcyB0ZW1wbGF0ZSkgLSBAdG9kbyBtb3ZlIHRvIHRlbXBsYXRlXG4gIGNvbnN0IHNvY2tldElPID0gd2luZG93LkNPTkZJRyAmJiB3aW5kb3cuQ09ORklHLlNPQ0tFVF9DT05GSUc7XG4gIGNvbnN0IGFwcE5hbWUgPSB3aW5kb3cuQ09ORklHICYmIHdpbmRvdy5DT05GSUcuQVBQX05BTUU7XG5cbiAgLy8gY29uZmlndXJlIGNsaWVudCAvIGFwcFxuICBzb3VuZHdvcmtzLmNsaWVudC5pbml0KCdwbGF5ZXInLCB7IHNvY2tldElPLCBhcHBOYW1lIH0pO1xuICBjb25zdCBwZXJmb3JtYW5jZSA9IG5ldyBQbGF5ZXJFeHBlcmllbmNlKGF1ZGlvRmlsZXMpO1xuXG4gIC8vIEB3YXJuaW5nOiBubyB2aWV3cyBzaG91bGQgYmUgY3JlYXRlZCBiZWZvcmUgdGhpcyBjYWxsXG4gIC8vIGltcGxpZXMgdG8gcmVtb3ZlIGluaXQgYW5kIG1ha2UgaXQgYSBgc3RhcnRgIHN1Yi1yb3V0aW5lXG4gIHNvdW5kd29ya3MuY2xpZW50LnN0YXJ0KCk7XG5cbn1cblxuLy8gSW5pdCBhcHAgd2hlbiBkb2N1bWVudCBpZCByZWFkeVxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBpbml0KTtcbiJdfQ==